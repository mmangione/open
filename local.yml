version: '3'

volumes:
  local_postgres_data: {}
  caddy: {}
  production_traefik: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: gcr.io/proven-record-242223/open:latest
    # watch out for sequential failures, postgres will quickly lock up
    # restart: on-failure
    # restart: no 
    depends_on:
      - postgres
    volumes:
      - .:/app
    env_file:
      - ./.envs/.local/.django
    ports:
      - "0.0.0.0:5000:5000"
    command: /local_django_start.sh

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: open_production_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.local/.django

#  caddy:
#    build:
#      context: .
#      dockerfile: ./compose/local/caddy/Dockerfile
#    depends_on:
#      - django
#    volumes:
#      - caddy:/root/.caddy
#    ports:
#      - "2015:2015"

  redis:
    image: redis:5.0

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    depends_on:
      - django
    ports:
      - "0.0.0.0:80:80"

#  celeryworker:
#    <<: *django
#    image: open_local_celeryworker
#    depends_on:
#      - redis
#      - postgres
#      - mailhog
#    ports: []
#    command: /start-celeryworker.sh

  celeryworker:
    image: gcr.io/proven-record-242223/open:latest
    depends_on:
      - redis
      - postgres
    env_file:
      - ./.envs/.local/.django
    volumes:
      - .:/app
    command: /start-celeryworker.sh

  celerybeat:
    image: gcr.io/proven-record-242223/open:latest
    depends_on:
      - redis
      - postgres
    env_file:
      - ./.envs/.local/.django
    volumes:
      - .:/app
    command: /start-celerybeat.sh
